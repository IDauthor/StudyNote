git 命令:

1.设置用户名和邮箱(作为一个标识)
	用户名: git config --global user.name "wangyangyang"
	邮箱：	git config --global user.email "1499401323.qq.com"
注意：git config  --global 参数，有了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，
当然你也可以对某个仓库指定的不同的用户名和邮箱。

2.创建版本库(在某个路径下,假设在该路径下建有文件readme.txt)
	git init 可以把这个目录变成git可以管理的仓库(.git)
这个目录是Git用来跟踪管理版本的	

3.文件添加到版本库中
	(1)git add readme.txt
		或git add .	将文件添加到暂存区
	(2)git commit -m "readme.txt提交"
		或git commit	将文件提交到仓库
		
	git status
	查看当前状态，是否还有文件未提交
	
	git diff readme.txt
	查看文件改了哪些内容
	
	git log
	查看历史记录,从最近到最远
	git log --pretty=oneline
	简洁显示log
	
4.版本回退
	(1)git reset --hard HEAD^
		回退上一版本
		git reset --hard HEAD^^
		回退上上版本
		git reset --hard HEAD~100
		回退前100版本
	
	(2)git reflog
		获取每一次版本号
		git reset --hard 版本号
		回退到我们想要的那一版本号软件
		
5.git 撤销修改
	(1)手动在文件中删除
	(2)恢复上一个版本 gir reset -- hard HEAD^
	(3)git checkout -- readme.txt
		把readme.txt在工作区做的修改全部撤销，分两种情况	1)readme.txt修改后，未放到暂存区。使用撤销修改回到和版本库一模一样
		2)readme.txt以放到暂存区，又做了修改
		依然可以撤销掉修改的内容
		
6.删除文件	
	rm b.txt
	或手动在目录下删除掉文件
	然后 git commit 提交删除扥文件
	若想恢复删除的文件 git checkout -- b.txt
	
7.远程仓库
	注册GitHub账号，本地git仓库和GitHub直接的传输是通过SSH加密的
	
	1)创建 SSH Key
	ssh-keygen
	生成 id_rsa(私钥)和id_rsa.pub(公钥)两个文件
	将id_rsa.pub内容粘贴到GitHub的setting中的SSH Key
	
8.添加远程仓库
	本地git仓库和GitHub上的git仓库远程同步
	登录GitHub 创建一个新的仓库
	
	git remote add origin https://github.com/IDauthor/1.practise.git
	本地仓库和远程仓库关联
	
	git push -u origin master
	把本地仓库分支master内容推送到远程仓库，实际上是把当前分支master推送到远程
	由于远程库是空的，我们第一次推送master分支时，加上了 –u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。推送成功后，可以立刻在github页面中看到远程库的内容已经和本地一模一样了，
	
	从现在起，只要本地做了提交，就可以通过:
	git push origin master
	把本地master分支的最新修改推送到GitHub了
	
8.从远程库克隆
	git clone https://github.com/IDauthor/1.practise.git

9.创建与合并分支
		在版本回填退里，你已经知道，每次提交，Git都把它们串成一条时间线，这条时间线就是一个分支。截止到目前，只有一条时间线，在Git里，这个分支叫主分支，即master分支。HEAD严格来说不是指向提交，而是指向master，master才是指向提交的，所以，HEAD指向的就是当前分支。
		
		git checkout -b dev
		创建并切换分支dev
		
		git checkout -b表示创建并切换，相当于下面两条
		git branch dev	创建dev分支
		git checkout dev	切换到dev分支
		
		git merge dev
		在当前分支上合并dev分支内容
		git merge命令用于合并指定分支到当前分支上
		
		git branch -d dev
		删除dev分支
		
		git branch
		查看分支
		
10.如何解决冲突
	
	git stash
	将当前的工作现场隐藏起来
	git stash list
	查看隐藏工作现场
	
11.多人协作

	1.git remote
	查看远程库的信息
	git remote -v
	查看远程库的详细信息‘
	
	git push origin master
	该分支被推送到远程库对应的远程分支上
	
	
	　　Git基本常用命令如下：

　　mkdir：         XX (创建一个空目录 XX指目录名)

　　pwd：          显示当前目录的路径。

　　git init          把当前的目录变成可以管理的git仓库，生成隐藏.git文件。

　　git add XX       把xx文件添加到暂存区去。

　　git commit –m “XX”  提交文件 –m 后面的是注释。

　　git status        查看仓库状态

　　git diff  XX      查看XX文件修改了那些内容

　　git log          查看历史记录

　　git reset  --hard HEAD^ 或者 git reset  --hard HEAD~ 回退到上一个版本

　　(如果想回退到100个版本，使用git reset –hard HEAD~100 )

　　cat XX         查看XX文件内容

　　git reflog       查看历史记录的版本号id

　　git checkout -- XX  把XX文件在工作区的修改全部撤销。

　　git rm XX          删除XX文件

　　git remote add origin https://github.com/tugenhua0707/testgit 关联一个远程库

　　git push –u(第一次要用-u 以后不需要) origin master 把当前master分支推送到远程库

　　git clone https://github.com/tugenhua0707/testgit  从远程库中克隆

　　git checkout –b dev  创建dev分支 并切换到dev分支上

　　git branch  查看当前所有的分支

　　git checkout master 切换回master分支

　　git merge dev    在当前的分支上合并dev分支

　　git branch –d dev 删除dev分支

　　git branch name  创建分支

　　git stash 把当前的工作隐藏起来 等以后恢复现场后继续工作

　　git stash list 查看所有被隐藏的文件列表

　　git stash apply 恢复被隐藏的文件，但是内容不删除

　　git stash drop 删除文件

　　git stash pop 恢复文件的同时 也删除文件

　　git remote 查看远程库的信息

　　git remote –v 查看远程库的详细信息

　　git push origin master  Git会把master分支推送到远程库对应的远程分支上